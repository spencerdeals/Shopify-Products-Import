name: Auto PR from Prompt

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  make-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Preflight checks
        run: |
          if [ -z "${{ secrets.OPENAI_API_KEY }}" ]; then
            echo "Missing OPENAI_API_KEY secret"; exit 1;
          fi
          if [ ! -f ".prompt.txt" ]; then
            echo "Missing .prompt.txt at repo root"; exit 1;
          fi
          echo "Preflight OK"

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Generate patch with OpenAI (Node script)
        id: gen
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          cat > gen.mjs <<'EOF'
          import { readFile, writeFile } from 'node:fs/promises';

          const apiKey = process.env.OPENAI_API_KEY;
          if (!apiKey) {
            console.error('OPENAI_API_KEY is missing');
            process.exit(1);
          }

          const prompt = await readFile('.prompt.txt', 'utf8');

          const body = {
            model: 'gpt-4o-mini',
            temperature: 0.1,
            max_tokens: 4000,
            messages: [
              { role: 'system', content: 'Return ONLY a valid git unified diff patch for this repository. No prose.' },
              { role: 'user', content: prompt }
            ]
          };

          const resp = await fetch('https://api.openai.com/v1/chat/completions', {
            method: 'POST',
            headers: {
              'Authorization': `Bearer ${apiKey}`,
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(body)
          });

          if (!resp.ok) {
            const text = await resp.text();
            console.error('OpenAI API error:', resp.status, text);
            process.exit(1);
          }

          const data = await resp.json();
          const content = data?.choices?.[0]?.message?.content ?? '';
          await writeFile('patch.diff', content, 'utf8');

          const firstLine = content.split('\n', 1)[0] || '';
          console.log('Patch first line:', firstLine);

          if (!firstLine.startsWith('diff --git')) {
            console.error('OpenAI did not return a git diff. First 120 chars:');
            console.error(content.slice(0, 120));
            process.exit(1);
          }
          EOF

          node gen.mjs
          sed -n '1,3p' patch.diff || true

      - name: Create branch & apply patch
        id: apply
        run: |
          BRANCH="auto/fix-$(date +%s)"
          echo "branch=$BRANCH" >> "$GITHUB_OUTPUT"

          git checkout -b "$BRANCH"

          if ! git apply -p0 --whitespace=fix patch.diff; then
            echo "Failed to apply patch. Showing first 120 lines:"
            sed -n '1,120p' patch.diff
            exit 1
          fi

          git add -A
          git commit -m "Auto patch from .prompt.txt" || echo "No changes to commit"
          git push origin "$BRANCH"

      - name: Open Pull Request
        uses: actions/github-script@v7
        with:
          script: |
            const branch = '${{ steps.apply.outputs.branch }}';
            const { owner, repo } = context.repo;
            const res = await github.rest.pulls.create({
              owner, repo,
              title: 'Auto-generated PR from .prompt.txt',
              head: branch,
              base: 'main',
              body: 'This PR was generated by the Auto PR workflow.'
            });
            core.info(`PR #${res.data.number} created`);
