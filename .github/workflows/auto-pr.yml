name: Auto PR from Prompt

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  make-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Preflight checks
        run: |
          if [ -z "${{ secrets.OPENAI_API_KEY }}" ]; then
            echo "Missing OPENAI_API_KEY secret"; exit 1;
          fi
          if [ ! -f ".prompt.txt" ]; then
            echo "Missing .prompt.txt at repo root"; exit 1;
          fi
          echo "Preflight OK"

      - name: Install jq
        run: sudo apt-get update -y && sudo apt-get install -y jq

      - name: Generate patch from prompt (OpenAI)
        id: gen
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          # Read .prompt.txt and JSON-escape it (produces a quoted JSON string)
          PROMPT_ESCAPED=$(jq -Rs '.' .prompt.txt)

          # Call OpenAI and capture the model output
          RESP=$(curl -sS https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d @- <<JSON
          {
            "model": "gpt-4o-mini",
            "temperature": 0.1,
            "max_tokens": 4000,
            "messages": [
              { "role": "system", "content": "Return ONLY a valid git unified diff patch for this repository. No prose." },
              { "role": "user", "content": ${PROMPT_ESCAPED} }
            ]
          }
JSON
          )

          # Write the assistant message to patch.diff
          echo "$RESP" | jq -r '.choices[0].message.content' > patch.diff

          echo "Patch header (first 3 lines):"
          sed -n '1,3p' patch.diff || true

          # Must start with a git diff header
          if ! head -n1 patch.diff | grep -q '^diff --git'; then
            echo "OpenAI did not return a git diff. First 120 lines below:"
            sed -n '1,120p' patch.diff
            exit 1
          fi

      - name: Create branch & apply patch
        id: apply
        run: |
          BRANCH="auto/fix-$(date +%s)"
          echo "branch=$BRANCH" >> "$GITHUB_OUTPUT"

          git checkout -b "$BRANCH"

          if ! git apply -p0 --whitespace=fix patch.diff; then
            echo "Failed to apply patch. First 120 lines of patch:"
            sed -n '1,120p' patch.diff
            exit 1
          fi

          git add -A
          git commit -m "Auto patch from .prompt.txt" || echo "No changes to commit"
          git push origin "$BRANCH"

      - name: Open Pull Request
        uses: actions/github-script@v7
        with:
          script: |
            const branch = '${{ steps.apply.outputs.branch }}';
            const { owner, repo } = context.repo;
            const res = await github.rest.pulls.create({
              owner, repo,
              title: 'Auto-generated PR from .prompt.txt',
              head: branch,
              base: 'main',
              body: 'This PR was generated by the Auto PR workflow.'
            });
            core.info(`PR #${res.data.number} created`);
