name: Auto PR from Prompt

on:
  workflow_dispatch:   # manual trigger

jobs:
  make-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Preflight checks
        run: |
          test -n "${{ secrets.OPENAI_API_KEY }}" || (echo "Missing OPENAI_API_KEY secret" && exit 1)
          test -f ".prompt.txt" || (echo "Missing .prompt.txt at repo root" && exit 1)
          echo "Preflight OK"

      - name: Install jq (for JSON parsing)
        run: sudo apt-get update -y && sudo apt-get install -y jq

      - name: Call OpenAI to generate a unified diff
        id: gen
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          # Read prompt
          PROMPT_CONTENT=$(cat .prompt.txt)

          # Call OpenAI
          RESP=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d @- <<'JSON'
          {
            "model": "gpt-4o-mini",
            "messages": [
              { "role": "system", "content": "You are a code refactoring assistant. Return ONLY a valid git unified diff patch for this repository. No extra text." },
              { "role": "user", "content": "'"$PROMPT_CONTENT"'" }
            ],
            "temperature": 0.1,
            "max_tokens": 4000
          }
JSON
          )

          # Extract diff text
          echo "$RESP" | jq -r '.choices[0].message.content' > patch.diff

          # Basic sanity: must start with diff header
          if ! head -n1 patch.diff | grep -q '^diff --git'; then
            echo "OpenAI did not return a git diff. Content was:"
            sed -n '1,120p' patch.diff
            exit 1
          fi

          echo "Patch received:"
          sed -n '1,30p' patch.diff

      - name: Create branch & apply patch
        run: |
          BRANCH="auto/fix-$(date +%s)"
          git checkout -b "$BRANCH"
          # try apply; if it fails, show context and exit
          if ! git apply -p0 --whitespace=fix patch.diff; then
            echo "Failed to apply patch. Showing first 120 lines:"
            sed -n '1,120p' patch.diff
            exit 1
          fi
          git add -A
          git commit -m "Auto patch from .prompt.txt" || echo "No changes to commit"
          git push origin "$BRANCH"

      - name: Open Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Auto-generated PR from .prompt.txt"
          body: "This PR was generated by the Auto PR workflow."
          branch: ${{ github.ref_name }}
